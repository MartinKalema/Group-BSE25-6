name: CI/CD Pipeline

# Trigger the workflow on push or pull request to the staging branch
on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      # Check out the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install dependencies from the root
      - name: Install dependencies
        run: |
          npm install

  test:
    runs-on: ubuntu-latest
    needs: install

    steps:
      # Run all tests using Jest with coverage
      - name: Run Jest tests with coverage
        run: |
          npm test

      # Upload coverage to CodeCov
      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Set the CodeCov token in GitHub Secrets
          files: ./coverage/**/lcov.info        # Path to the coverage report
          flags: unittests                      # Optional flag to identify this report
          fail_ci_if_error: true                # Fail the CI if the upload to CodeCov fails

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      # Build the frontend
      - name: Build frontend
        run: |
          cd frontend
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'

    steps:
      # Deploy to production server or hosting service
      - name: Deploy to Production
        run: |
          echo "Deploying application..."
          # Add your deployment script here (e.g., SSH to server, upload to S3, or use a platform-specific action)
